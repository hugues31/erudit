import numpy as np

def pure_exploitation(env, n_episodes=5_000):
    len_action_space = len(env.get_action_space())
    Q = np.zeros(len_action_space)
    N = np.zeros(len_action_space)

    Qe = np.empty((n_episodes, len_action_space))
    returns = np.empty(n_episodes)
    actions = np.empty(n_episodes, dtype=int)

    name = "Pure exploitation"
    for e in range(n_episodes):
        action = np.argmax(Q)
        feedback = env.step(action)
        N[action] += 1
        Q[action] = Q[action] + (feedback.reward - Q[action])/N[action]

        Qe[e] = Q
        returns[e] = feedback.reward
        actions[e] = action
    
    return name, returns, Qe, actions